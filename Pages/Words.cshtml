@page "/words"
@model BlankyBlankLibrary.Pages.WordsModel
@{
    ViewData["Title"] = "Words";
}
<div class="accordion" id="WordsWordsWords">

    @foreach (var word in Model.Words) {

        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#WordsWordsWords_@word.Id">
                    @word.Name
                </button>
            </h2>
            <div id="WordsWordsWords_@word.Id" class="accordion-collapse collapse" data-bs-parent="#WordsWordsWords">
                <div class="accordion-body">
                    <div class="row">
                        <div class="col-6">
                            <h6>Properties</h6>
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <th scope="row">Placeholder</th>
                                        <td>@word.Placeholder</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Optional</th>
                                        <td>@word.Optional</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Amount</th>
                                        <td>@word.Amount</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Max choices</th>
                                        <td>@word.MaxChoices</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-6">
                            <h6>Words</h6>
                            <ul class="list-group list-group-flush">
                                @foreach (var wordWord in word.Words) {
                                    <li class="list-group-item">
                                        
                                        @* Main word *@
                                        <span class="text-primary-emphasis">@wordWord.Word</span>
                                        
                                        @if (wordWord.LinkedWords != null) {
                                            @* Sub-words *@
                                            @for (int i = 0; i < wordWord.LinkedWords.Count(); i++) {
                                                
                                                @* First level *@
                                                <span class="text-warning">
                                                    @if (i != 0) {
                                                        <span>|</span>
                                                    }
                                                </span>
                                                
                                                @wordWord.LinkedWords[i].Word

                                                @if (wordWord.LinkedWords[i].LinkedWords != null) {
                                                    <span class="text-secondary">
                                                        (@string.Join(", ", wordWord.LinkedWords[i].LinkedWords!.Select(x => x.Word)))
                                                    </span>
                                                }
                                            }
                                            
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
