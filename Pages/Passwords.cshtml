@page "/passwords"
@model BlankyBlankLibrary.Pages.PasswordsModel
@{
    ViewData["Title"] = "Passwords";
}

<div class="accordion" id="PasswordsPasswordsPasswords">
    @for (var i = 0; i < Model.Passwords.Count(); i++) {
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#PasswordsPasswordsPasswords_@Model.Passwords[i].Id">
                    @Model.Passwords[i].Password
                </button>
            </h2>
            <div id="PasswordsPasswordsPasswords_@Model.Passwords[i].Id" class="accordion-collapse collapse" data-bs-parent="#PasswordsPasswordsPasswords">
                <div class="accordion-body">
                    <div class="row">
                        <div class="col-12">
                            <table class="table">
                                <tbody>
                                    @* <tr>
                                        <th scope="row">ID</th>
                                        <td>
                                            @password.Id.ToString("0000")
                                            @if (password.ImportedId != null) {
                                                <i class="text-secondary">
                                                    (@password.ImportedId.Value.ToString("00000"))
                                                </i>
                                            }
                                        </td>
                                    </tr> *@
                                    <tr>
                                        <th scope="row">Alternative spellings</th>
                                        <td>@string.Join(", ", Model.Passwords[i].AlternativeSpellings)</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Forbidden words</th>
                                        <td>@string.Join(", ", Model.Passwords[i].ForbiddenWords)</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Difficulty</th>
                                        <td>
                                            @switch (Model.Passwords[i].Difficulty)
                                            {
                                                case "easy":
                                                    <span class="badge text-bg-success">@Model.Passwords[i].Difficulty</span>
                                                    break;
                                                case "medium":
                                                    <span class="badge text-bg-warning">@Model.Passwords[i].Difficulty</span>
                                                    break;
                                                case "hard":
                                                    <span class="badge text-bg-danger">@Model.Passwords[i].Difficulty</span>
                                                    break;
                                                default:
                                                    throw new Exception("Idk about this one.");
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Category</th>
                                        <td>@Model.Passwords[i].Category</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Sub-category</th>
                                        <td>@Model.Passwords[i].Subcategory</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">US-centric?</th>
                                        <td>@(Model.Passwords[i].UsCentric ? "yes" : "no")</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Include in export?</th>
                                        <td>
                                            <form method="post" asp-page-handler="ToggleExport" class="form-check form-switch">
                                                <input type="hidden" id="passwordId_@i" name="passwordId" value="@Model.Passwords[i].Id">
                                                <input class="form-check-input submit-on-change" type="checkbox" role="switch" id="includeInExport_@i" name="includeInExport" checked="@Model.Passwords[i].IncludeInExport">
                                                @* <label class="form-check-label" asp-for="Passwords[i].IncludeInExport"></label> *@
                                            </form>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            $(".submit-on-change").change(function() {
                $(this).parent("form").submit();
            });

        })
    </script>
}